// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  name       String?
  password   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  PlayerData PlayerData[]
  // ChessGame  ChessGame[]
  ChessGame  ChessGame[]
}

enum Result {
  WHITE_WIN
  BLACK_WIN
  DRAW
  IN_PROGRESS
}

enum GameStatus {
  WAITING
  IN_PROGRESS
  FINISHED
}

enum Color {
  WHITE
  BLACK
}

model PlayerData {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  color       Color
  userName    String
  chessGameId String
  ChessGame   ChessGame? @relation(fields: [chessGameId], references: [id])
}

model ChessGame {
  id         String       @id @default(cuid())
  lobbyId    String
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  color      Color
  name       String
  fen        String
  pgn        String
  result     Result
  gameStatus GameStatus
  isJoinable Boolean      @default(false)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  PlayerData PlayerData[]
}

model PastPlayedGame {
  id      Int    @id @default(autoincrement())
  fen     String
  pgn     String
  player1 String
  player2 String
}
